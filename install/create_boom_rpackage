#!/bin/bash

# This script involves a call to install_headers.py in the same directory.
# Please make sure that that first line in that file points to an appropriate
# python interpreter.

usage () { echo "Usage: $0 [-c] [-r] [-C] 1>&2; exit 0";
           echo " -i: Install the package"
           echo " -c: Check the package using R CMD CHECK"
           echo " -C: Check the package for submission to CRAN using R CMD CHECK --as-cran"
         }

DO_INSTALL=0
DO_CHECK=0

while getopts :ciC option; do
    case "${option}" in
        i)
            DO_INSTALL=1
            ;;
        c)
            DO_CHECK=1
            ;;
        C)
            DO_CHECK_AS_CRAN=1
            ;;
        \?)
	    echo "Invalid option: -$OPTARG" >&2
            usage
            ;;
    esac
done
shift $((OPTIND-1))

BOOM_DIR='rpackage/Boom'

## If there is already a Boom directory then delete it.
if [ -d "$BOOM_DIR" ]; then
   rm -rf $BOOM_DIR
fi

## create a Boom subdirectory and copy the relevant files into it.
mkdir -p $BOOM_DIR
echo "Copying top level files"
cp Interfaces/R/Boom/DESCRIPTION $BOOM_DIR
cp Interfaces/R/Boom/LICENSE $BOOM_DIR
cp Interfaces/R/Boom/NAMESPACE $BOOM_DIR

##----------------------------------------------------------------------
## Source:
## Create the source directory and copy top-level files.
backup_files=`find . -name "\.#*"`
if [ ! -z $backup_files ]
then
    echo "Removing backup files: $backup_files"
    rm $backup_files
fi

echo "Copying source files"
mkdir $BOOM_DIR/src
cp Interfaces/R/*.cpp $BOOM_DIR/src
# cp Interfaces/R/Boom/src/*.cpp $BOOM_DIR/src
cp Interfaces/R/Boom/src/*.R $BOOM_DIR/src
cp Interfaces/R/Boom/src/Makevars $BOOM_DIR/src

## Populate the various source directories.
SRCS=`find Bmath -name "*.cpp"`
SRCS="$SRCS `find cpputil -name "*.cpp"`"
SRCS="$SRCS `find distributions -name "*.cpp"`"
SRCS="$SRCS `find LinAlg -name "*.cpp"`"
SRCS="$SRCS `find math -name "*.cpp"`"
SRCS="$SRCS `find Models -name "*.cpp"`"
SRCS="$SRCS `find numopt -name "*.cpp"`"
SRCS="$SRCS `find Samplers -name "*.cpp"`"
SRCS="$SRCS `find stats -name "*.cpp"`"
SRCS="$SRCS `find TargetFun -name "*.cpp"`"
./install/install_headers.py $SRCS $BOOM_DIR/src

##----------------------------------------------------------------------
## Copy the R source files
echo "Copying R source files"
mkdir $BOOM_DIR/R
cp Interfaces/R/Boom/R/*.R $BOOM_DIR/R

##----------------------------------------------------------------------
## Copy the documentation
mkdir $BOOM_DIR/man
echo "copying documentation"
cp Interfaces/R/Boom/man/*.Rd $BOOM_DIR/man

##----------------------------------------------------------------------
## Headers:
## Create the include directory, and add in the top level header files.
echo "copying headers"
mkdir -p $BOOM_DIR/inst/include
cp *.hpp $BOOM_DIR/inst/include

## Put a couple of local implementation files in the source directories that
## expect them.
cp math/cephes/cephes_impl.hpp $BOOM_DIR/src/math/cephes
cp Bmath/*.hpp $BOOM_DIR/src/Bmath

## Copy the bulk of the header files to the relevant sub directories.
HDRS=`find Bmath -name "*.hpp"`
HDRS="$HDRS `find cpputil -name "*.hpp"`"
HDRS="$HDRS `find distributions -name "*.hpp"`"
HDRS="$HDRS `find LinAlg -name "*.hpp"`"
HDRS="$HDRS `find math -name "*.hpp"`"
HDRS="$HDRS `find Models -name "*.hpp"`"
HDRS="$HDRS `find numopt -name "*.hpp"`"
HDRS="$HDRS `find Samplers -name "*.hpp"`"
HDRS="$HDRS `find stats -name "*.hpp"`"
HDRS="$HDRS `find TargetFun -name "*.hpp"`"
HDRS="$HDRS `find Eigen -name "*.h"`"
./install/install_headers.py $HDRS $BOOM_DIR/inst/include

## Put the headers from Interfaces/R in the r_interface directory.
mkdir $BOOM_DIR/inst/include/r_interface
cp Interfaces/R/*.hpp $BOOM_DIR/inst/include/r_interface
cp Eigen/* $BOOM_DIR/inst/include/Eigen/
#echo "Ignore the message about not being able to copy Eigen/src."

## Fix warning supression in Eigen, which violates CRAN policy
fname=$BOOM_DIR/inst/include/Eigen/src/Core/arch/SSE/Complex.h

if [[ $OSTYPE =~ "darwin" ]]; then
    SED=gsed
elif [[ $OSTYPE =~ "linux" ]]; then
    SED=sed
fi

$SED -i 's|#pragma GCC|// #pragma GCC|g' $fname
$SED -i 's|#pragma GCC|// #pragma GCC|g' $fname

fname=$BOOM_DIR/inst/include/Eigen/src/Core/util/DisableStupidWarnings.h

$SED -i 's|#pragma clang diagnostic ignored|// #pragma clang diagnostic ignored|g' $fname
$SED -i 's|#pragma clang diagnostic push|// #pragma clang diagnostic push|g' $fname

$SED -i 's|#pragma GCC diagnostic ignored|// #pragma GCC diagnostic ignored|g' $fname
$SED -i 's|#pragma GCC diagnostic push|// #pragma GCC diagnostic push|g' $fname

##----------------------------------------------------------------------
# Rename files with long names.  If the files are include files, then we need to
# find the files that include them, and rename the includes in the source.

echo "renaming long file names"

# The base install path.
ibase="$BOOM_DIR/inst/include"
src_base="$BOOM_DIR/src"

# The directory containing the header to be renamed.
dbase="Models/StateSpace/Multivariate/PosteriorSamplers"

# The specific header value, and its replacement.
hdr="MultivariateStateSpaceModelSampler.hpp"
new_hdr="MVSSMS.hpp"

mv "$ibase/$dbase/$hdr" "$ibase/$dbase/$new_hdr"
echo "replacing $dbase/$hdr with $dbase/$new_hdr"
grep -rl "$dbase/$hdr" "$BOOM_DIR/src/Models" | xargs $SED -i "s|$dbase/$hdr|$dbase/$new_hdr|g"

hdr="MvStateSpaceRegressionPosteriorSampler.hpp"
new_hdr="MVSSRPS.hpp"
mv "$ibase/$dbase/$hdr" "$ibase/$dbase/$new_hdr"
echo "replacing $dbase/$hdr with $dbase/$new_hdr"
grep -rl "$dbase/$hdr" "$BOOM_DIR/src/Models" | xargs $SED -i "s|$dbase/$hdr|$dbase/$new_hdr|g"

hdr="SharedLocalLevelPosteriorSampler.hpp"
new_hdr="SLLPS.hpp"
mv "$ibase/$dbase/$hdr" "$ibase/$dbase/$new_hdr"
echo "replacing $dbase/$hdr with $dbase/$new_hdr"
grep -rl "$dbase/$hdr" "$BOOM_DIR/src/Models" | xargs $SED -i "s|$dbase/$hdr|$dbase/$new_hdr|g"

dbase="Models/StateSpace/StateModels/PosteriorSamplers"

hdr="GeneralSeasonalLLTPosteriorSampler.hpp"
new_hdr="GSLLTPS.hpp"
mv "$ibase/$dbase/$hdr" "$ibase/$dbase/$new_hdr"
echo "replacing $dbase/$hdr with $dbase/$new_hdr"
grep -rl "$dbase/$hdr" "$BOOM_DIR/src/Models" | xargs $SED -i "s|$dbase/$hdr|$dbase/$new_hdr|g"

dbase="Models/StateSpace/Multivariate/PosteriorSamplers"
hdr="ScalarStateModelAdapterPosteriorSampler.hpp"
new_hdr="SADSampler.hpp"
mv "$ibase/$dbase/$hdr" "$ibase/$dbase/$new_hdr"
echo "replacing $dbase/$hdr with $dbase/$new_hdr"
grep -rl "$dbase/$hdr" "$BOOM_DIR/src/Models" | xargs $SED -i "s|$dbase/$hdr|$dbase/$new_hdr|g"

source="ScalarStateModelAdapterPosteriorSampler.cpp"
new_source="SADSampler.cpp"
mv "$src_base/$dbase/$source" "$src_base/$dbase/$new_source"

##----------------------------------------------------------------------
## Build the package:

cd rpackage

R CMD build Boom

if [[ $DO_CHECK = 1 ]]; then
    MAKEFLAGS=" j 16 " R CMD check Boom_*.tar.gz
fi

if [[ $DO_CHECK_AS_CRAN = 1 ]]; then
    MAKEFLAGS=" j 16 " R CMD check --as-cran Boom_*.tar.gz
fi

if [[ $DO_INSTALL = 1 ]]; then
    MAKEFLAGS=" j 16 " R CMD INSTALL Boom_*.tar.gz
fi
